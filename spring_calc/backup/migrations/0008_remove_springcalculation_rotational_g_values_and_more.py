# Generated by Django 5.1.7 on 2025-03-21 07:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cars', '0002_vehicle_car_type_vehicle_drivetrain'),
        ('spring_calc', '0007_springcalculation_arb_stiffness_multiplier_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='springcalculation',
            name='rotational_g_values',
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='corner_entry_adjustment',
            field=models.IntegerField(default=0, help_text='Corner entry adjustment (-5 to 5)'),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='corner_exit_adjustment',
            field=models.IntegerField(default=0, help_text='Corner exit adjustment (-5 to 5)'),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='low_speed_stability',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='ou_adjustment',
            field=models.IntegerField(default=0, help_text='Oversteer/Understeer adjustment (-5 to 5)'),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='rotational_g_150mph',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='rotational_g_40mph',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='springcalculation',
            name='rotational_g_75mph',
            field=models.FloatField(default=0.0),
        ),
        migrations.CreateModel(
            name='GearRatioCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_hp', models.FloatField(default=500, help_text='Engine power in HP')),
                ('torque_kgfm', models.FloatField(default=50, help_text='Engine torque in kgfm')),
                ('min_rpm', models.IntegerField(default=2500, help_text='Minimum engine RPM')),
                ('max_rpm', models.IntegerField(default=8000, help_text='Maximum engine RPM')),
                ('max_power_rpm', models.IntegerField(default=7000, help_text='RPM at maximum power')),
                ('num_gears', models.IntegerField(default=6, help_text='Number of gears')),
                ('final_drive_input_method', models.CharField(choices=[('CALC', 'Calculate'), ('USER', 'User Input')], default='CALC', help_text='Method for determining final drive ratio', max_length=10)),
                ('final_drive', models.FloatField(default=3.5, help_text='Final drive ratio')),
                ('gear_ratio_input_method', models.CharField(choices=[('CALC', 'Calculate'), ('USER', 'User Input')], default='CALC', help_text='Method for determining gear ratios', max_length=10)),
                ('first_gear', models.FloatField(default=3.8, help_text='First gear ratio')),
                ('second_gear', models.FloatField(default=2.9, help_text='Second gear ratio')),
                ('third_gear', models.FloatField(default=2.3, help_text='Third gear ratio')),
                ('fourth_gear', models.FloatField(default=1.9, help_text='Fourth gear ratio')),
                ('fifth_gear', models.FloatField(default=1.5, help_text='Fifth gear ratio')),
                ('sixth_gear', models.FloatField(default=1.2, help_text='Sixth gear ratio')),
                ('seventh_gear', models.FloatField(blank=True, help_text='Seventh gear ratio (optional)', null=True)),
                ('tire_diameter_inches', models.FloatField(default=24.5, help_text='Tire diameter in inches')),
                ('track', models.CharField(blank=True, default='Nurburgring', max_length=100)),
                ('top_speed_mph', models.FloatField(default=180, help_text='Top speed on longest straight (mph)')),
                ('min_corner_speed_mph', models.FloatField(default=60, help_text='Minimum corner speed (mph)')),
                ('min_corner_gear', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th')], default=1, help_text='Gear used at minimum corner speed')),
                ('traction_control_value', models.IntegerField(default=0, help_text='Set to 0 for FR, MR, and RR; higher values for AWD and FF')),
                ('gear_spacing_strategy', models.CharField(choices=[('LINEAR', 'Linear Spacing'), ('GEOMETRIC', 'Geometric Progression'), ('CUSTOM', 'Custom Tuned'), ('TRACK', 'Track Optimized')], default='GEOMETRIC', help_text='Strategy for spacing gear ratios', max_length=20)),
                ('power_curve_image', models.ImageField(blank=True, null=True, upload_to='power_curves/')),
                ('power_curve_min_rpm', models.IntegerField(blank=True, null=True)),
                ('power_curve_max_rpm', models.IntegerField(blank=True, null=True)),
                ('power_curve_max_power', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='PowerCurvePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rpm', models.IntegerField(help_text='Engine RPM')),
                ('power', models.FloatField(help_text='Power output at this RPM')),
                ('calculation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='power_curve_points', to='spring_calc.gearratiocalculation')),
            ],
            options={
                'ordering': ['rpm'],
            },
        ),
    ]
